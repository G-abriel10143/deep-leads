openapi: 3.0.0
info:
  title: API de Autenticação e Gerenciamento de Usuário
  description: API para autenticação, registro e gerenciamento de usuários
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
tags:
  - name: Autenticação de Usuário
    description: APIs relacionadas à autenticação de usuários
  - name: Usuario serviços
    description: API de gerenciamento de usuários
paths:
  /auth/signin:
    post:
      tags:
        - Autenticação de Usuário
      summary: Autenticar Usuário
      description: Autentica um usuário com suas credenciais.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Usuário autenticado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '404':
          description: Senha inválida.
          content:
            application/json:
              schema:
                type: string
  /auth/signup:
    post:
      tags:
        - Autenticação de Usuário
      summary: Registrar Novo Usuário
      description: Registra um novo usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioModel'
      responses:
        '201':
          description: Usuário registrado com sucesso.
        '400':
          description: Erro ao salvar o cadastro.
          content:
            application/json:
              schema:
                type: string
  /usuario/{pagina}/{tamanho}:
    get:
      tags:
        - Usuario serviços
      summary: Retorna uma lista com todos os usuários em paginação
      description: Retorna uma lista com todos os usuários em paginação.
      parameters:
        - in: path
          name: pagina
          required: true
          schema:
            type: integer
          description: Número da página.
        - in: path
          name: tamanho
          required: true
          schema:
            type: integer
          description: Tamanho da página.
      responses:
        '200':
          description: Usuários encontrados com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioModel'
        '404':
          description: Usuários não encontrados.
  /usuario/deletar:
    delete:
      tags:
        - Usuario serviços
      summary: Deletar usuário com parâmetro Email
      description: Deleta o usuário com a passagem do parâmetro de Email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Usuário deletado com sucesso.
        '404':
          description: Usuário não encontrado.
  /usuario/buscarUsuarios:
    get:
      tags:
        - Usuario serviços
      summary: Buscar Usuários
      description: Buscar listas de usuários.
      responses:
        '200':
          description: Usuários encontrados com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioModel'
        '404':
          description: Usuários não encontrados.
  /usuario/atualizar/{email}:
    put:
      tags:
        - Usuario serviços
      summary: Atualizar Usuário com parâmetro Email
      description: Atualizar Usuário.
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: Email do usuário a ser atualizado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioUpdateDto'
      responses:
        '200':
          description: Usuário alterado com sucesso.
        '404':
          description: Usuário não encontrado.
components:
  schemas:
    UsuarioModel:
      type: object
      properties:
        id:
          type: integer
          description: ID do usuário.
        nome:
          type: string
          description: Nome do usuário.
        email:
          type: string
          format: email
          description: Endereço de e-mail do usuário.
        dataNascimento:
          type: string
          format: date
          description: Data de nascimento do usuário.
      required:
        - nome
        - email

    UsuarioUpdateDto:
      type: object
      properties:
        nome:
          type: string
          description: Novo nome do usuário (opcional).
        email:
          type: string
          format: email
          description: Novo endereço de e-mail do usuário (opcional).
        senha:
          type: string
          description: Nova senha do usuário (opcional).
        dataNascimento:
          type: string
          format: date
          description: Nova data de nascimento do usuário (opcional).
