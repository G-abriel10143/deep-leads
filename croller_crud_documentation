swagger: "2.0"
info:
  version: 1.0.0
  title: API de Autenticação e Gerenciamento de Usuário
  description: API para autenticação, registro e gerenciamento de usuários
basePath: /api
schemes:
  - http
tags:
  - name: Autenticação de Usuário
    description: APIs relacionadas à autenticação de usuários
  - name: Usuario serviços
    description: API de gerenciamento de usuários

paths:
  /auth/signin:
    post:
      tags:
        - Autenticação de Usuário
      summary: Autenticar Usuário
      description: Autentica um usuário com suas credenciais.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Credenciais de login
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        200:
          description: Usuário autenticado com sucesso.
          schema:
            $ref: '#/definitions/UsuarioResponse'
        404:
          description: Senha inválida.
          schema:
            type: string

  /auth/signup:
    post:
      tags:
        - Autenticação de Usuário
      summary: Registrar Novo Usuário
      description: Registra um novo usuário.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dados do novo usuário
          required: true
          schema:
            $ref: '#/definitions/UsuarioModel'
      responses:
        201:
          description: Usuário registrado com sucesso.
        400:
          description: Erro ao salvar o cadastro.
          schema:
            type: string

  /usuario/{pagina}/{tamanho}:
    get:
      tags:
        - Usuario serviços
      summary: Retorna uma lista com todos os usuários em paginação
      description: Retorna uma lista com todos os usuários em paginação.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pagina
          description: Número da página.
          required: true
          type: integer
        - in: path
          name: tamanho
          description: Tamanho da página.
          required: true
          type: integer
      responses:
        200:
          description: Usuários encontrados com sucesso.
          schema:
            type: array
            items:
              $ref: '#/definitions/UsuarioModel'
        404:
          description: Usuários não encontrados.

  /usuario/deletar:
    delete:
      tags:
        - Usuario serviços
      summary: Deletar usuário com parâmetro Email
      description: Deleta o usuário com a passagem do parâmetro de Email.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Email do usuário a ser deletado
          required: true
          schema:
            type: string
      responses:
        200:
          description: Usuário deletado com sucesso.
        404:
          description: Usuário não encontrado.

  /usuario/buscarUsuarios:
    get:
      tags:
        - Usuario serviços
      summary: Buscar Usuários
      description: Buscar listas de usuários.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Usuários encontrados com sucesso.
          schema:
            type: array
            items:
              $ref: '#/definitions/UsuarioModel'
        404:
          description: Usuários não encontrados.

  /usuario/atualizar/{email}:
    put:
      tags:
        - Usuario serviços
      summary: Atualizar Usuário com parâmetro Email
      description: Atualizar Usuário.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: email
          description: Email do usuário a ser atualizado.
          required: true
          type: string
        - in: body
          name: body
          description: Dados do usuário a serem atualizados
          required: true
          schema:
            $ref: '#/definitions/UsuarioUpdateDto'
      responses:
        200:
          description: Usuário alterado com sucesso.
        404:
          description: Usuário não encontrado.

definitions:
  LoginDto:
    type: object
    properties:
      username:
        type: string
      password:
        type: string

  UsuarioModel:
    type: object
    properties:
      id:
        type: integer
        description: ID do usuário.
      nome:
        type: string
        description: Nome do usuário.
      email:
        type: string
        format: email
        description: Endereço de e-mail do usuário.
      dataNascimento:
        type: string
        format: date
        description: Data de nascimento do usuário.
    required:
      - nome
      - email

  UsuarioUpdateDto:
    type: object
    properties:
      nome:
        type: string
        description: Novo nome do usuário (opcional).
      email:
        type: string
        format: email
        description: Novo endereço de e-mail do usuário (opcional).
      senha:
        type: string
        description: Nova senha do usuário (opcional).
      dataNascimento:
        type: string
        format: date
        description: Nova data de nascimento do usuário (opcional)
