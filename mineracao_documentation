openapi: 3.0.0
info:
  title: API de Mineração de Dados
  description: API para mineração de dados
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/mineracao

# Definição das tags
tags:
  - name: Mining de dados
    description: Serviços responsáveis pela mineração de dados

# Definição dos endpoints
paths:
  /get/url/by-user:
    get:
      tags:
        - Mining de dados
      summary: Obter URLs por Usuário
      description: Obtém URLs associadas a um usuário em paginação.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Número da página.
        - in: query
          name: size
          required: false
          schema:
            type: integer
          description: Tamanho da página.
      responses:
        '200':
          description: URLs obtidas com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlModel'
        '404':
          description: Usuário não encontrado.

  /get/leads/by-id:
    get:
      tags:
        - Mining de dados
      summary: Obter Leads por Usuário
      description: Obtém Leads associados a um usuário em paginação.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Número da página.
        - in: query
          name: size
          required: false
          schema:
            type: integer
          description: Tamanho da página.
      responses:
        '200':
          description: Leads obtidos com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadsListResponse'
        '404':
          description: Usuário não encontrado.

  /generate/leads/by-id:
    post:
      tags:
        - Mining de dados
      summary: Gerar Leads por Usuário
      description: Gera Leads e associa a um usuário.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlRequest'
      responses:
        '200':
          description: Leads gerados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadsResponse'
        '404':
          description: Usuário não encontrado.

  /getDatas:
    post:
      tags:
        - Mining de dados
      summary: Obter Dados
      description: Obtém dados a partir de uma URL.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlRequest'
      responses:
        '200':
          description: Dados obtidos com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadsResponse'

# Definição dos modelos de dados
components:
  schemas:
    UrlModel:
      type: object
      properties:
        url:
          type: string
        keys:
          type: array
          items:
            type: string
        typeSearch:
          type: string
        dataMining:
          type: string
          format: date-time
        leadsModels:
          type: array
          items:
            $ref: '#/components/schemas/LeadsModel'
      example:
        url: "https://example.com"
        keys: ["key1", "key2"]
        typeSearch: "type1"
        dataMining: "2023-09-05T12:00:00Z"
        leadsModels:
          - leadId: 1
            firstName: John
            lastName: Doe
            email: john.doe@example.com
    LeadsListResponse:
      type: object
      properties:
        leads:
          type: array
          items:
            $ref: '#/components/schemas/LeadsResponse'
      example:
        leads:
          - leadId: 1
            firstName: John
            lastName: Doe
            email: john.doe@example.com
          - leadId: 2
            firstName: Jane
            lastName: Smith
            email: jane.smith@example.com
    LeadsResponse:
      type: object
      properties:
        leadId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
      example:
        leadId: 1
        firstName: John
        lastName: Doe
        email: john.doe@example.com
    UrlRequest:
      type: object
      properties:
        url:
          type: string
        keys:
          type: array
          items:
            type: string
        typeSearch:
          type: string
      example:
        url: "https://example.com"
        keys: ["key1", "key2"]
        typeSearch: "type1"
